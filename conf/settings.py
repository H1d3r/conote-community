"""
Django settings for conote project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'secret-key'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pure_pagination',
    'bootstrap3',
    'rest_framework',
    'huey.contrib.djhuey',
    'channels',
    'app.ucenter',
    'app.log',
    'app.xss',
    'app.sandbox',
    'app.disposable_email',
    'app.rat'
]

MIDDLEWARE = [
    'conote.middleware.SandboxModdleware',
    'conote.middleware.LogMiddleware',
    'conote.middleware.XssMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'conote.urls'

AUTH_USER_MODEL = 'ucenter.User'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'conote.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(default='sqlite:///%s' % os.path.join(BASE_DIR, 'db.sqlite3'))
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

APPEND_SLASH = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/data/static'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

PAGINATION_SETTINGS = {
    'PAGE_RANGE_DISPLAYED': 5,
    'MARGIN_PAGES_DISPLAYED': 2,
    'SHOW_FIRST_PAGE_WHEN_INVALID': True,
}

OAUTH = {
    'client_id': r'id',
    'client_secret': r'secret',
    'callback_url': 'https://example.com/callback/'
}

LOGIN_URL = 'auth:login'
LOGIN_REDIRECT_URL = 'log:index'

O_MAIN_DOMAIN = 'note.leavesongs.com'
O_SERVER_SCHEME = 'http'
O_SERVER_DOMAIN = 'mhz.pw:8000'
O_NS1_DOMAIN = 'ns1.leavesongs.com'
O_NS2_DOMAIN = 'ns2.leavesongs.com'
O_SERVER_IP = '45.76.65.170'
O_SHORT_DOMAIN = 'mhz.pw'
O_REBIND_DOMAIN = 's.mhz.pw'
O_ADDITION_ZONE = f'''{O_SERVER_DOMAIN}.         IN      MX      5 {O_MAIN_DOMAIN}.'''
O_XSS_DOMAIN = 'x.2m1.pw'
O_MAIL_DOMAIN = '1m6.win'
O_RESERVE_DOMAINS = (O_SERVER_DOMAIN, O_SHORT_DOMAIN, O_REBIND_DOMAIN, O_XSS_DOMAIN, O_MAIL_DOMAIN)

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
IP_HEADER = None

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
       'standard': {
           'format': '[%(asctime)s] - [%(levelname)s] - [%(pathname)s:%(lineno)d]  - %(message)s',
           'datefmt': '%Y-%m-%d %H:%M:%S'
       },
       'sample': {
           'format': '[%(asctime)s] - %(message)s',
           'datefmt': '%Y-%m-%d %H:%M:%S'
       }
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'sample'
        },
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'error.log'),
            'formatter': 'standard'
        }
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'WARNING'
        },
        'conote': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True
        }
    },
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'app.api.authentication.TokenAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.BrowsableAPIRenderer',
        'app.api.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.JSONParser',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 100,
}

# if DEBUG:
#     REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'].append('rest_framework.renderers.BrowsableAPIRenderer')

CTRL_SERVER_ADDRESS = ('127.0.0.1', 56553)


SESSION_COOKIE_AGE = 60 * 60 * 24 * 30 * 6

REDIS_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379')

# settings.py
HUEY = {
    'name': DATABASES['default']['NAME'],  # Use db name for huey.
    'results': False,  # Store return values of tasks.
    'events': True,  # Consumer emits events allowing real-time monitoring.
    'store_none': False,  # If a task returns None, do not save to results.
    'immediate': DEBUG,  # If DEBUG=True, run synchronously.
    'blocking': False,  # Poll the queue rather than do blocking pop.
    'backend_class': 'huey.RedisHuey',  # Use path to redis huey by default,
    'connection': {
        # huey-specific connection parameters.
        'read_timeout': 1,  # If not polling (blocking pop), use timeout.
        'url': REDIS_URL,  # Allow Redis config via a DSN.
    },
    'consumer': {
        'workers': 2,
        'worker_type': 'thread',
        'initial_delay': 0.1,  # Smallest polling interval, same as -d.
        'backoff': 1.15,  # Exponential backoff using this rate, -b.
        'max_delay': 10.0,  # Max possible polling interval, -m.
        'utc': True,  # Treat ETAs and schedules as UTC datetimes.
        'scheduler_interval': 1,  # Check schedule every second, -s.
        'periodic': True,  # Enable crontab feature.
        'check_worker_health': True,  # Enable worker health checks.
        'health_check_interval': 1,  # Check worker health every second.
    },
}

SANDBOX_ROOT = os.path.join(BASE_DIR, 'media', 'sandbox')
DOCKER_CONFIG = {
    'php-5.6': {
        'image': 'php:5.6-fpm-alpine',
        'container_name': 'conote_php56',
        'network_name': 'network_01',
        'subnet': '10.233.101.0/24',
        'gateway': '10.233.101.254',
        'ip': '10.233.101.10',
        'tmp': '/data/tmp/php56'
    },
    'php-7.2': {
        'image': 'php:7.2-fpm-alpine',
        'container_name': 'conote_php72',
        'network_name': 'network_02',
        'subnet': '10.233.102.0/24',
        'gateway': '10.233.102.254',
        'ip': '10.233.102.10',
        'tmp': '/data/tmp/php72'
    }
}

RPC_SETTING = {
    'HOST': 'localhost',
    'PORT': 8077
}

ASGI_APPLICATION = 'conote.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [{
                'address': REDIS_URL
            }],
            'prefix': 'conote:asgi:'
        },
    },
}

# Added from Django 3.2
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
